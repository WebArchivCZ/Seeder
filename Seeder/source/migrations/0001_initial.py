# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2017-06-25 16:49
from __future__ import unicode_literals

import core.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import search_blob.models
import source.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('publishers', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
            bases=(models.Model, source.models.SlugOrCreateModel),
        ),
        migrations.CreateModel(
            name='KeyWord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
            ],
            bases=(source.models.SlugOrCreateModel, models.Model),
        ),
        migrations.CreateModel(
            name='Seed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('last_changed', models.DateTimeField(auto_now=True)),
                ('url', models.URLField(validators=[source.models.validate_tld], verbose_name='Seed url')),
                ('state', models.CharField(choices=[('inc', 'Include in harvest'), ('exc', 'Exclude from harvest'), ('old', 'Seed is no longer published')], default='inc', max_length=15)),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('from_time', core.models.DatePickerField(blank=True, null=True, verbose_name='From')),
                ('to_time', core.models.DatePickerField(blank=True, null=True, verbose_name='To')),
                ('javascript', models.BooleanField(default=False, verbose_name='Javascript')),
                ('global_reject', models.BooleanField(default=False, verbose_name='Global reject')),
                ('youtube', models.BooleanField(default=False, verbose_name='Youtube')),
                ('calendars', models.BooleanField(default=False, verbose_name='Calendars')),
                ('local_traps', models.BooleanField(default=False, verbose_name='Local traps')),
                ('redirect', models.BooleanField(default=False, verbose_name='Redirect on seed')),
                ('robots', models.BooleanField(default=False, verbose_name='Robots.txt active')),
                ('gentle_fetch', models.CharField(blank=True, choices=[('default', 'default'), ('low', 'low'), ('very_low', 'very_low')], max_length=10)),
                ('budget', models.IntegerField(blank=True, choices=[(15000, 15000), (60000, 60000), (5600, 5600)], null=True)),
            ],
            options={
                'verbose_name_plural': 'Seeds',
                'verbose_name': 'Seed',
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('last_changed', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('annotation', models.TextField(blank=True, null=True, verbose_name='Annotation')),
                ('suggested_by', models.CharField(blank=True, choices=[('publisher', 'Publisher'), ('visitor', 'Visitor'), ('issn', 'ISSN'), ('curator', 'Curator')], default='curator', max_length=10, null=True, verbose_name='Suggested by')),
                ('aleph_id', models.CharField(blank=True, max_length=100, null=True)),
                ('issn', models.CharField(blank=True, max_length=20, null=True)),
                ('state', models.CharField(choices=[('voting', 'Voting'), ('duplicity', 'Duplicated record'), ('waiting', 'Waiting for response'), ('reevaluation', 'Waiting for reevaluation'), ('technical', 'Technical review'), ('communication', 'In communication'), ('vote_accepted', 'Accepted by staff'), ('vote_declined', 'Declined by staff'), ('success', 'Archiving accepted'), ('forced', 'Archiving without publisher consent'), ('declined', 'Declined by publisher'), ('ignored', 'Publisher ignored requests'), ('expired', 'Contract expired'), ('terminated', 'Contract terminated')], default='voting', max_length=15, verbose_name='State')),
                ('frequency', models.IntegerField(blank=True, choices=[(0, 'Once only'), (1, 'Once a year'), (2, 'Twice a year'), (4, 'Quarterly'), (6, 'Every two months'), (52, 'Weekly'), (12, 'Every month'), (365, 'Daily')], null=True, verbose_name='Frequency')),
                ('screenshot', models.ImageField(blank=True, null=True, upload_to='screenshots', verbose_name='Screenshot')),
                ('screenshot_date', models.DateTimeField(blank=True, null=True)),
                ('dead_source', models.BooleanField(default=False, verbose_name='Source is dead')),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='source.Category', verbose_name='Category')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sources_created', to=settings.AUTH_USER_MODEL)),
                ('keywords', models.ManyToManyField(blank=True, to='source.KeyWord')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Curator')),
                ('publisher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publishers.Publisher', verbose_name='Publisher')),
                ('publisher_contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='publishers.ContactPerson')),
            ],
            options={
                'ordering': ['name'],
                'verbose_name_plural': 'Sources',
                'permissions': (('manage_sources', 'Manage others sources'),),
                'verbose_name': 'Source',
            },
            bases=(search_blob.models.SearchModel, source.models.SlugOrCreateModel, models.Model),
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('subcategory_id', models.CharField(blank=True, max_length=40, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='source.Category')),
            ],
            options={
                'ordering': ['name'],
            },
            bases=(models.Model, source.models.SlugOrCreateModel),
        ),
        migrations.AddField(
            model_name='source',
            name='sub_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='source.SubCategory', verbose_name='Sub category'),
        ),
        migrations.AddField(
            model_name='seed',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='source.Source'),
        ),
    ]
